/* This program takes the following input: an integer representing the number of names to process followed by a list of newline-separated names
   This program generates a username handle for each name
   Handles are generated by removing all letters from the name except the first and last letters of both the first and last names
   Demonstrating management of arrays, indicies, reading in files, and string manipulation
 
*/

#include <stdio.h>
#include <string.h>

void read_name();

int main()
{ 
   // read in the number of names to be processed
   int n;
   scanf("%d", &n);

   // call the function read_names n times
   for(int i=0; i<n; i++)
   {
    read_name();
   }

   return 0;

}






// Function read_name loops through each character in a single input line 
// stores the whole line in a string
// prints the characters that make up the handle for that name
// preconditions:none, postconditions:none

void  read_name()
{
   // indicies is an array of indexes that correspond with spaces in the line
   int indicies[100001];

   // lineindex keeps track of the index along the line we are reading in
   int lineindex = 0;

   // arrayindex keeps track of the index within the indicies array
   int arrayindex = 0;

   // line stores the whole name as a string
   char line[100001];

   char temp;
   scanf("%c", &temp);

   //if there is a newline character or space, scan past it so we can start the while loop
   while(temp == '\n'|| temp == 32)
   scanf("%c", &temp);
   
   //while temp is not a newline, go through each charater in the line
   // if temp is a space, store its index in the indicies array and increment arrayindex
   
   while(temp != '\n')
   {
     if(temp == 32)
     {
      indicies[arrayindex] = lineindex;
      arrayindex++;
     }
    
     //add each character of the line to a string called line, increment the index, and go to the next character
     line[lineindex] = temp;
     lineindex++;
     scanf("%c", &temp);
   }

 
  // always print the first character
  printf("%c", line[0]);

  // print the characters on either side of a space based on the indicies stored in the indicies array
  for(int i = 0; i<arrayindex; i++)
  {
  printf("%c%c", line[indicies[i]-1], line[indicies[i]+1]);
  }    

  //if length is greater than 1 print the final character of the line before the new line
   if(lineindex > 1)
   printf("%c\n", line[lineindex-1]);
   else
   printf("\n");
}

